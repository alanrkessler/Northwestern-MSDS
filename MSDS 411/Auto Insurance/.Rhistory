mutate(Masters_IND = ifelse(EDUCATION == "Masters", 1, 0),
EDUCATIONMasters = ifelse(EDUCATION == "Masters", 1, 0),
PhD_IND = ifelse(EDUCATION == "PhD", 1, 0),
Doctor_IND = ifelse(JOB == "Doctor", 1, 0),
Manager_IND = ifelse(JOB == "Manager", 1, 0),
Sport_IND = ifelse(CAR_TYPE_GRP == "Sports Car", 1, 0),
SUV_IND = ifelse(CAR_TYPE_GRP == "z_SUV", 1, 0),
P_TARGET_AMT = exp(6.26917773 -
0.12756159 * MARRIED_IND +
0.18093361 * MALE_IND -
0.11888771 * REVOKED_IND -
0.02637962 * CAR_AGE_FLR -
0.17258351 * CAR_AGE_ONE_IND -
0.09826503 * HOME_VAL_ZERO_IND +
0.02140739 * MVR_PTS_CAP +
0.26788307 * BLUEBOOK_CLOG +
0.15227087 * Masters_IND +
0.32114827 * PhD_IND -
0.39891518 * Doctor_IND -
0.19331633 * Manager_IND +
0.16454011 * Sport_IND +
0.11345302 * SUV_IND),
check_s = predict(glm_fit6$finalModel, test_process3),
diff_s = P_TARGET_AMT - check_s) %>%
select(INDEX, P_TARGET_FLAG, P_TARGET_AMT, check_flag, check_s, diff_f, diff_s)
# Load data
training <- read.csv("logit_insurance.csv")
testing <- read.csv("logit_insurance_test.csv")
# Initial formating and indicator creation
train_process1 <- training %>%
mutate(JOB = as.factor(ifelse(JOB == "", "Other", as.character(JOB))),
OLDCLAIM_NUM = as.numeric(gsub("[^0-9\\.]", "", OLDCLAIM)),
BLUEBOOK_NUM = as.numeric(gsub("[^0-9\\.]", "", BLUEBOOK)),
HOME_VAL_NUM = as.numeric(gsub("[^0-9\\.]", "", HOME_VAL)),
INCOME_NUM = as.numeric(gsub("[^0-9\\.]", "", INCOME)),
PARENT1_IND = ifelse(PARENT1 == "Yes", 1, 0),
MARRIED_IND = ifelse(MSTATUS == "z_No", 0, 1),
MALE_IND = ifelse(SEX == "z_F", 0, 1),
COMM_USE_IND = ifelse(CAR_USE == "Commercial", 1, 0),
REVOKED_IND = ifelse(REVOKED == "Yes", 1, 0),
RURAL_IND = ifelse(URBANICITY == "z_Highly Rural/ Rural", 1, 0)) %>%
dplyr::select(-OLDCLAIM, -BLUEBOOK, -HOME_VAL, -INCOME, -PARENT1, -MSTATUS,
-SEX, -CAR_USE, -RED_CAR, -REVOKED, -URBANICITY, -INDEX)
test_process1 <- testing %>%
mutate(JOB = as.factor(ifelse(JOB == "", "Other", as.character(JOB))),
OLDCLAIM_NUM = as.numeric(gsub("[^0-9\\.]", "", OLDCLAIM)),
BLUEBOOK_NUM = as.numeric(gsub("[^0-9\\.]", "", BLUEBOOK)),
HOME_VAL_NUM = as.numeric(gsub("[^0-9\\.]", "", HOME_VAL)),
INCOME_NUM = as.numeric(gsub("[^0-9\\.]", "", INCOME)),
PARENT1_IND = ifelse(PARENT1 == "Yes", 1, 0),
MARRIED_IND = ifelse(MSTATUS == "z_No", 0, 1),
MALE_IND = ifelse(SEX == "z_F", 0, 1),
COMM_USE_IND = ifelse(CAR_USE == "Commercial", 1, 0),
REVOKED_IND = ifelse(REVOKED == "Yes", 1, 0),
RURAL_IND = ifelse(URBANICITY == "z_Highly Rural/ Rural", 1, 0)) %>%
dplyr::select(-OLDCLAIM, -BLUEBOOK, -HOME_VAL, -INCOME, -PARENT1, -MSTATUS,
-SEX, -CAR_USE, -RED_CAR, -REVOKED, -URBANICITY)
# Data formatting
train_process2 <- train_process1 %>%
mutate(AGE_IMPUTE = ifelse(is.na(AGE),
mean(train_process1$AGE, na.rm = TRUE),
AGE),
YOJ_IMPUTE = ifelse(is.na(YOJ),
mean(train_process1$YOJ, na.rm = TRUE),
YOJ),
CAR_AGE_IMPUTE = ifelse(is.na(CAR_AGE),
mean(train_process1$CAR_AGE, na.rm = TRUE),
CAR_AGE),
HOME_VAL_IMPUTE = ifelse(is.na(HOME_VAL_NUM),
mean(train_process1$HOME_VAL_NUM,
na.rm = TRUE),
HOME_VAL_NUM),
INCOME_IMPUTE = ifelse(is.na(INCOME_NUM),
mean(train_process1$INCOME_NUM, na.rm = TRUE),
INCOME_NUM),
CAR_AGE_FLR = ifelse(CAR_AGE_IMPUTE < 1, 1, CAR_AGE_IMPUTE),
CAR_AGE_ONE_IND = ifelse(CAR_AGE_FLR == 1, 1, 0),
HOME_VAL_ZERO_IND = ifelse(HOME_VAL_IMPUTE == 0, 1, 0),
INCOME_ZERO_IND = ifelse(INCOME_IMPUTE == 0, 1, 0),
YOJ_CAP = ifelse(YOJ_IMPUTE > 15, 15, YOJ_IMPUTE),
TRAVTIME_CAP = ifelse(TRAVTIME > 65, 65, TRAVTIME),
MVR_PTS_CAP = ifelse(MVR_PTS > 7, 7, MVR_PTS),
INCOME_CAP = ifelse(INCOME_IMPUTE > quantile(INCOME_NUM, 0.98,
na.rm = TRUE),
quantile(INCOME_NUM, 0.98, na.rm = TRUE),
INCOME_IMPUTE),
HOME_VAL_CAP = ifelse(HOME_VAL_IMPUTE > quantile(HOME_VAL_NUM, 0.98,
na.rm = TRUE),
quantile(HOME_VAL_NUM, 0.98, na.rm = TRUE),
HOME_VAL_IMPUTE),
BLUEBOOK_CLOG = log(ifelse(BLUEBOOK_NUM > quantile(BLUEBOOK_NUM, 0.98,
na.rm = TRUE),
quantile(BLUEBOOK_NUM, 0.98, na.rm = TRUE),
BLUEBOOK_NUM)),
OLDCLAIM_CLOG = log1p(ifelse(OLDCLAIM_NUM > quantile(OLDCLAIM_NUM,
0.98,
na.rm = TRUE),
quantile(OLDCLAIM_NUM, 0.98,
na.rm = TRUE),
OLDCLAIM_NUM)),
AGE_BIN = ntile(AGE_IMPUTE, 10),
KIDSDRIV_IND = ifelse(KIDSDRIV > 1, 1, KIDSDRIV),
CLM_FREQ_IND = ifelse(CLM_FREQ > 1, 1, CLM_FREQ),
CAR_TYPE_GRP = ifelse(as.character(CAR_TYPE) == "Panel Truck",
"PT_Van",
ifelse(as.character(CAR_TYPE) == "Van",
"PT_Van",
as.character(CAR_TYPE)))) %>%
select(-AGE, -YOJ, -CAR_AGE, -HOME_VAL_NUM, -INCOME_NUM, -CAR_AGE_IMPUTE,
-TRAVTIME, -INCOME_IMPUTE, -HOME_VAL_IMPUTE, -BLUEBOOK_NUM,
-KIDSDRIV, -HOMEKIDS, -CLM_FREQ, -CAR_TYPE, -MVR_PTS, -YOJ_IMPUTE,
-OLDCLAIM_NUM)
test_process2 <- test_process1 %>%
mutate(AGE_IMPUTE = ifelse(is.na(AGE),
mean(train_process1$AGE, na.rm = TRUE),
AGE),
YOJ_IMPUTE = ifelse(is.na(YOJ),
mean(train_process1$YOJ, na.rm = TRUE),
YOJ),
CAR_AGE_IMPUTE = ifelse(is.na(CAR_AGE),
mean(train_process1$CAR_AGE, na.rm = TRUE),
CAR_AGE),
HOME_VAL_IMPUTE = ifelse(is.na(HOME_VAL_NUM),
mean(train_process1$HOME_VAL_NUM,
na.rm = TRUE),
HOME_VAL_NUM),
INCOME_IMPUTE = ifelse(is.na(INCOME_NUM),
mean(train_process1$INCOME_NUM, na.rm = TRUE),
INCOME_NUM),
CAR_AGE_FLR = ifelse(CAR_AGE_IMPUTE < 1, 1, CAR_AGE_IMPUTE),
CAR_AGE_ONE_IND = ifelse(CAR_AGE_FLR == 1, 1, 0),
HOME_VAL_ZERO_IND = ifelse(HOME_VAL_IMPUTE == 0, 1, 0),
INCOME_ZERO_IND = ifelse(INCOME_IMPUTE == 0, 1, 0),
YOJ_CAP = ifelse(YOJ_IMPUTE > 15, 15, YOJ_IMPUTE),
TRAVTIME_CAP = ifelse(TRAVTIME > 65, 65, TRAVTIME),
MVR_PTS_CAP = ifelse(MVR_PTS > 7, 7, MVR_PTS),
INCOME_CAP = ifelse(INCOME_IMPUTE > quantile(INCOME_NUM, 0.98,
na.rm = TRUE),
quantile(INCOME_NUM, 0.98, na.rm = TRUE),
INCOME_IMPUTE),
HOME_VAL_CAP = ifelse(HOME_VAL_IMPUTE > quantile(HOME_VAL_NUM, 0.98,
na.rm = TRUE),
quantile(HOME_VAL_NUM, 0.98, na.rm = TRUE),
HOME_VAL_IMPUTE),
BLUEBOOK_CLOG = log(ifelse(BLUEBOOK_NUM > quantile(BLUEBOOK_NUM, 0.98,
na.rm = TRUE),
quantile(BLUEBOOK_NUM, 0.98, na.rm = TRUE),
BLUEBOOK_NUM)),
OLDCLAIM_CLOG = log1p(ifelse(OLDCLAIM_NUM > quantile(OLDCLAIM_NUM,
0.98,
na.rm = TRUE),
quantile(OLDCLAIM_NUM, 0.98,
na.rm = TRUE),
OLDCLAIM_NUM)),
AGE_BIN = ntile(AGE_IMPUTE, 10),
KIDSDRIV_IND = ifelse(KIDSDRIV > 1, 1, KIDSDRIV),
CLM_FREQ_IND = ifelse(CLM_FREQ > 1, 1, CLM_FREQ),
CAR_TYPE_GRP = ifelse(as.character(CAR_TYPE) == "Panel Truck",
"PT_Van",
ifelse(as.character(CAR_TYPE) == "Van",
"PT_Van",
as.character(CAR_TYPE)))) %>%
select(-AGE, -YOJ, -CAR_AGE, -HOME_VAL_NUM, -INCOME_NUM, -CAR_AGE_IMPUTE,
-TRAVTIME, -INCOME_IMPUTE, -HOME_VAL_IMPUTE, -BLUEBOOK_NUM,
-KIDSDRIV, -HOMEKIDS, -CLM_FREQ, -CAR_TYPE, -MVR_PTS, -YOJ_IMPUTE,
-OLDCLAIM_NUM)
# Likelihood encoding
train_age_bins <- train_process2 %>%
select(AGE_IMPUTE, TARGET_FLAG) %>%
mutate(AGE_BIN = ntile(AGE_IMPUTE, 10)) %>%
group_by(AGE_BIN) %>%
summarise(AGE_LE = mean(TARGET_FLAG))
train_education <- train_process2 %>%
select(EDUCATION, TARGET_FLAG) %>%
group_by(EDUCATION) %>%
summarise(EDUCATION_LE = mean(TARGET_FLAG))
train_job <- train_process2 %>%
select(JOB, TARGET_FLAG) %>%
group_by(JOB) %>%
summarise(JOB_LE = mean(TARGET_FLAG))
train_car_type <- train_process2 %>%
select(CAR_TYPE_GRP, TARGET_FLAG) %>%
group_by(CAR_TYPE_GRP) %>%
summarise(CAR_TYPE_LE = mean(TARGET_FLAG))
test_process3 <- test_process2 %>%
left_join(., train_age_bins, by = c("AGE_BIN")) %>%
left_join(., train_education, by = c("EDUCATION")) %>%
left_join(., train_job, by = c("JOB")) %>%
left_join(., train_car_type, by = c("CAR_TYPE_GRP")) %>%
select(-AGE_BIN) %>%
mutate(EDUCATIONMasters = ifelse(EDUCATION == "Masters", 1, 0))
scores <- test_process3 %>%
mutate(P_TARGET_FLAG_1 = -2.483003597310 -
0.054573707554 * TIF +
0.156175626835 * PARENT1_IND -
0.625290547649 * MARRIED_IND +
0.613124974465 * COMM_USE_IND +
0.730838376558 * REVOKED_IND -
2.346282191463 * RURAL_IND +
0.523619559214 * INCOME_ZERO_IND +
0.017839396142 * YOJ_CAP +
0.016774384176 * TRAVTIME_CAP +
0.098285854937 * MVR_PTS_CAP -
0.000002665866 * INCOME_CAP -
0.000001017080 * HOME_VAL_CAP -
0.268592168258 * BLUEBOOK_CLOG +
0.728686098030 * KIDSDRIV_IND +
0.420053793383 * CLM_FREQ_IND +
3.386556243405 * AGE_LE +
2.668357569001 * EDUCATION_LE +
2.614630061699 * JOB_LE +
4.717621474153 * CAR_TYPE_LE,
P_TARGET_FLAG = exp(P_TARGET_FLAG_1) / (1 + exp(P_TARGET_FLAG_1)),
check_flag = predict(glm_fit2c$finalModel, test_process3),
diff_f = P_TARGET_FLAG - check_flag) %>%
mutate(Masters_IND = ifelse(EDUCATION == "Masters", 1, 0),
EDUCATIONMasters = ifelse(EDUCATION == "Masters", 1, 0),
PhD_IND = ifelse(EDUCATION == "PhD", 1, 0),
Doctor_IND = ifelse(JOB == "Doctor", 1, 0),
Manager_IND = ifelse(JOB == "Manager", 1, 0),
Sport_IND = ifelse(CAR_TYPE_GRP == "Sports Car", 1, 0),
SUV_IND = ifelse(CAR_TYPE_GRP == "z_SUV", 1, 0),
P_TARGET_AMT = exp(6.26917773 -
0.12756159 * MARRIED_IND +
0.18093361 * MALE_IND -
0.11888771 * REVOKED_IND -
0.02637962 * CAR_AGE_FLR -
0.17258351 * CAR_AGE_ONE_IND -
0.09826503 * HOME_VAL_ZERO_IND +
0.02140739 * MVR_PTS_CAP +
0.26788307 * BLUEBOOK_CLOG +
0.15227087 * Masters_IND +
0.32114827 * PhD_IND -
0.39891518 * Doctor_IND -
0.19331633 * Manager_IND +
0.16454011 * Sport_IND +
0.11345302 * SUV_IND),
check_s = predict(glm_fit6$finalModel, test_process3),
diff_s = P_TARGET_AMT - check_s) %>%
select(INDEX, P_TARGET_FLAG, P_TARGET_AMT, check_flag, check_s, diff_f, diff_s)
# Load data
training <- read.csv("logit_insurance.csv")
testing <- read.csv("logit_insurance_test.csv")
# Initial formating and indicator creation
train_process1 <- training %>%
mutate(JOB = as.factor(ifelse(JOB == "", "Other", as.character(JOB))),
OLDCLAIM_NUM = as.numeric(gsub("[^0-9\\.]", "", OLDCLAIM)),
BLUEBOOK_NUM = as.numeric(gsub("[^0-9\\.]", "", BLUEBOOK)),
HOME_VAL_NUM = as.numeric(gsub("[^0-9\\.]", "", HOME_VAL)),
INCOME_NUM = as.numeric(gsub("[^0-9\\.]", "", INCOME)),
PARENT1_IND = ifelse(PARENT1 == "Yes", 1, 0),
MARRIED_IND = ifelse(MSTATUS == "z_No", 0, 1),
MALE_IND = ifelse(SEX == "z_F", 0, 1),
COMM_USE_IND = ifelse(CAR_USE == "Commercial", 1, 0),
REVOKED_IND = ifelse(REVOKED == "Yes", 1, 0),
RURAL_IND = ifelse(URBANICITY == "z_Highly Rural/ Rural", 1, 0)) %>%
dplyr::select(-OLDCLAIM, -BLUEBOOK, -HOME_VAL, -INCOME, -PARENT1, -MSTATUS,
-SEX, -CAR_USE, -RED_CAR, -REVOKED, -URBANICITY, -INDEX)
test_process1 <- testing %>%
mutate(JOB = as.factor(ifelse(JOB == "", "Other", as.character(JOB))),
OLDCLAIM_NUM = as.numeric(gsub("[^0-9\\.]", "", OLDCLAIM)),
BLUEBOOK_NUM = as.numeric(gsub("[^0-9\\.]", "", BLUEBOOK)),
HOME_VAL_NUM = as.numeric(gsub("[^0-9\\.]", "", HOME_VAL)),
INCOME_NUM = as.numeric(gsub("[^0-9\\.]", "", INCOME)),
PARENT1_IND = ifelse(PARENT1 == "Yes", 1, 0),
MARRIED_IND = ifelse(MSTATUS == "z_No", 0, 1),
MALE_IND = ifelse(SEX == "z_F", 0, 1),
COMM_USE_IND = ifelse(CAR_USE == "Commercial", 1, 0),
REVOKED_IND = ifelse(REVOKED == "Yes", 1, 0),
RURAL_IND = ifelse(URBANICITY == "z_Highly Rural/ Rural", 1, 0)) %>%
dplyr::select(-OLDCLAIM, -BLUEBOOK, -HOME_VAL, -INCOME, -PARENT1, -MSTATUS,
-SEX, -CAR_USE, -RED_CAR, -REVOKED, -URBANICITY)
# Data formatting
train_process2 <- train_process1 %>%
mutate(AGE_IMPUTE = ifelse(is.na(AGE),
mean(train_process1$AGE, na.rm = TRUE),
AGE),
YOJ_IMPUTE = ifelse(is.na(YOJ),
mean(train_process1$YOJ, na.rm = TRUE),
YOJ),
CAR_AGE_IMPUTE = ifelse(is.na(CAR_AGE),
mean(train_process1$CAR_AGE, na.rm = TRUE),
CAR_AGE),
HOME_VAL_IMPUTE = ifelse(is.na(HOME_VAL_NUM),
mean(train_process1$HOME_VAL_NUM,
na.rm = TRUE),
HOME_VAL_NUM),
INCOME_IMPUTE = ifelse(is.na(INCOME_NUM),
mean(train_process1$INCOME_NUM, na.rm = TRUE),
INCOME_NUM),
CAR_AGE_FLR = ifelse(CAR_AGE_IMPUTE < 1, 1, CAR_AGE_IMPUTE),
CAR_AGE_ONE_IND = ifelse(CAR_AGE_FLR == 1, 1, 0),
HOME_VAL_ZERO_IND = ifelse(HOME_VAL_IMPUTE == 0, 1, 0),
INCOME_ZERO_IND = ifelse(INCOME_IMPUTE == 0, 1, 0),
YOJ_CAP = ifelse(YOJ_IMPUTE > 15, 15, YOJ_IMPUTE),
TRAVTIME_CAP = ifelse(TRAVTIME > 65, 65, TRAVTIME),
MVR_PTS_CAP = ifelse(MVR_PTS > 7, 7, MVR_PTS),
INCOME_CAP = ifelse(INCOME_IMPUTE > quantile(INCOME_NUM, 0.98,
na.rm = TRUE),
quantile(INCOME_NUM, 0.98, na.rm = TRUE),
INCOME_IMPUTE),
HOME_VAL_CAP = ifelse(HOME_VAL_IMPUTE > quantile(HOME_VAL_NUM, 0.98,
na.rm = TRUE),
quantile(HOME_VAL_NUM, 0.98, na.rm = TRUE),
HOME_VAL_IMPUTE),
BLUEBOOK_CLOG = log(ifelse(BLUEBOOK_NUM > quantile(BLUEBOOK_NUM, 0.98,
na.rm = TRUE),
quantile(BLUEBOOK_NUM, 0.98, na.rm = TRUE),
BLUEBOOK_NUM)),
OLDCLAIM_CLOG = log1p(ifelse(OLDCLAIM_NUM > quantile(OLDCLAIM_NUM,
0.98,
na.rm = TRUE),
quantile(OLDCLAIM_NUM, 0.98,
na.rm = TRUE),
OLDCLAIM_NUM)),
AGE_BIN = ntile(AGE_IMPUTE, 10),
KIDSDRIV_IND = ifelse(KIDSDRIV > 1, 1, KIDSDRIV),
CLM_FREQ_IND = ifelse(CLM_FREQ > 1, 1, CLM_FREQ),
CAR_TYPE_GRP = ifelse(as.character(CAR_TYPE) == "Panel Truck",
"PT_Van",
ifelse(as.character(CAR_TYPE) == "Van",
"PT_Van",
as.character(CAR_TYPE)))) %>%
select(-AGE, -YOJ, -CAR_AGE, -HOME_VAL_NUM, -INCOME_NUM, -CAR_AGE_IMPUTE,
-TRAVTIME, -INCOME_IMPUTE, -HOME_VAL_IMPUTE, -BLUEBOOK_NUM,
-KIDSDRIV, -HOMEKIDS, -CLM_FREQ, -CAR_TYPE, -MVR_PTS, -YOJ_IMPUTE,
-OLDCLAIM_NUM)
test_process2 <- test_process1 %>%
mutate(AGE_IMPUTE = ifelse(is.na(AGE),
mean(train_process1$AGE, na.rm = TRUE),
AGE),
YOJ_IMPUTE = ifelse(is.na(YOJ),
mean(train_process1$YOJ, na.rm = TRUE),
YOJ),
CAR_AGE_IMPUTE = ifelse(is.na(CAR_AGE),
mean(train_process1$CAR_AGE, na.rm = TRUE),
CAR_AGE),
HOME_VAL_IMPUTE = ifelse(is.na(HOME_VAL_NUM),
mean(train_process1$HOME_VAL_NUM,
na.rm = TRUE),
HOME_VAL_NUM),
INCOME_IMPUTE = ifelse(is.na(INCOME_NUM),
mean(train_process1$INCOME_NUM, na.rm = TRUE),
INCOME_NUM),
CAR_AGE_FLR = ifelse(CAR_AGE_IMPUTE < 1, 1, CAR_AGE_IMPUTE),
CAR_AGE_ONE_IND = ifelse(CAR_AGE_FLR == 1, 1, 0),
HOME_VAL_ZERO_IND = ifelse(HOME_VAL_IMPUTE == 0, 1, 0),
INCOME_ZERO_IND = ifelse(INCOME_IMPUTE == 0, 1, 0),
YOJ_CAP = ifelse(YOJ_IMPUTE > 15, 15, YOJ_IMPUTE),
TRAVTIME_CAP = ifelse(TRAVTIME > 65, 65, TRAVTIME),
MVR_PTS_CAP = ifelse(MVR_PTS > 7, 7, MVR_PTS),
INCOME_CAP = ifelse(INCOME_IMPUTE > quantile(INCOME_NUM, 0.98,
na.rm = TRUE),
quantile(INCOME_NUM, 0.98, na.rm = TRUE),
INCOME_IMPUTE),
HOME_VAL_CAP = ifelse(HOME_VAL_IMPUTE > quantile(HOME_VAL_NUM, 0.98,
na.rm = TRUE),
quantile(HOME_VAL_NUM, 0.98, na.rm = TRUE),
HOME_VAL_IMPUTE),
BLUEBOOK_CLOG = log(ifelse(BLUEBOOK_NUM > quantile(BLUEBOOK_NUM, 0.98,
na.rm = TRUE),
quantile(BLUEBOOK_NUM, 0.98, na.rm = TRUE),
BLUEBOOK_NUM)),
OLDCLAIM_CLOG = log1p(ifelse(OLDCLAIM_NUM > quantile(OLDCLAIM_NUM,
0.98,
na.rm = TRUE),
quantile(OLDCLAIM_NUM, 0.98,
na.rm = TRUE),
OLDCLAIM_NUM)),
AGE_BIN = ntile(AGE_IMPUTE, 10),
KIDSDRIV_IND = ifelse(KIDSDRIV > 1, 1, KIDSDRIV),
CLM_FREQ_IND = ifelse(CLM_FREQ > 1, 1, CLM_FREQ),
CAR_TYPE_GRP = ifelse(as.character(CAR_TYPE) == "Panel Truck",
"PT_Van",
ifelse(as.character(CAR_TYPE) == "Van",
"PT_Van",
as.character(CAR_TYPE)))) %>%
select(-AGE, -YOJ, -CAR_AGE, -HOME_VAL_NUM, -INCOME_NUM, -CAR_AGE_IMPUTE,
-TRAVTIME, -INCOME_IMPUTE, -HOME_VAL_IMPUTE, -BLUEBOOK_NUM,
-KIDSDRIV, -HOMEKIDS, -CLM_FREQ, -CAR_TYPE, -MVR_PTS, -YOJ_IMPUTE,
-OLDCLAIM_NUM)
# Likelihood encoding
train_age_bins <- train_process2 %>%
select(AGE_IMPUTE, TARGET_FLAG) %>%
mutate(AGE_BIN = ntile(AGE_IMPUTE, 10)) %>%
group_by(AGE_BIN) %>%
summarise(AGE_LE = mean(TARGET_FLAG))
train_education <- train_process2 %>%
select(EDUCATION, TARGET_FLAG) %>%
group_by(EDUCATION) %>%
summarise(EDUCATION_LE = mean(TARGET_FLAG))
train_job <- train_process2 %>%
select(JOB, TARGET_FLAG) %>%
group_by(JOB) %>%
summarise(JOB_LE = mean(TARGET_FLAG))
train_car_type <- train_process2 %>%
select(CAR_TYPE_GRP, TARGET_FLAG) %>%
group_by(CAR_TYPE_GRP) %>%
summarise(CAR_TYPE_LE = mean(TARGET_FLAG))
test_process3 <- test_process2 %>%
left_join(., train_age_bins, by = c("AGE_BIN")) %>%
left_join(., train_education, by = c("EDUCATION")) %>%
left_join(., train_job, by = c("JOB")) %>%
left_join(., train_car_type, by = c("CAR_TYPE_GRP")) %>%
select(-AGE_BIN) %>%
mutate(EDUCATIONMasters = ifelse(EDUCATION == "Masters", 1, 0),
EDUCATIONPhD = ifelse(EDUCATION == "PhD", 1, 0),
JOBDoctor = ifelse(JOB == "Doctor", 1, 0),
JOBManager = ifelse(JOB == "Manager", 1, 0),
`CAR_TYPE_GRPSports Car` = ifelse(CAR_TYPE_GRP == "Sports Car", 1, 0),
CAR_TYPE_GRPz_SUV = ifelse(CAR_TYPE_GRP == "z_SUV", 1, 0))
scores <- test_process3 %>%
mutate(P_TARGET_FLAG_1 = -2.483003597310 -
0.054573707554 * TIF +
0.156175626835 * PARENT1_IND -
0.625290547649 * MARRIED_IND +
0.613124974465 * COMM_USE_IND +
0.730838376558 * REVOKED_IND -
2.346282191463 * RURAL_IND +
0.523619559214 * INCOME_ZERO_IND +
0.017839396142 * YOJ_CAP +
0.016774384176 * TRAVTIME_CAP +
0.098285854937 * MVR_PTS_CAP -
0.000002665866 * INCOME_CAP -
0.000001017080 * HOME_VAL_CAP -
0.268592168258 * BLUEBOOK_CLOG +
0.728686098030 * KIDSDRIV_IND +
0.420053793383 * CLM_FREQ_IND +
3.386556243405 * AGE_LE +
2.668357569001 * EDUCATION_LE +
2.614630061699 * JOB_LE +
4.717621474153 * CAR_TYPE_LE,
P_TARGET_FLAG = exp(P_TARGET_FLAG_1) / (1 + exp(P_TARGET_FLAG_1)),
check_flag = predict(glm_fit2c$finalModel, test_process3),
diff_f = P_TARGET_FLAG - check_flag) %>%
mutate(Masters_IND = ifelse(EDUCATION == "Masters", 1, 0),
EDUCATIONMasters = ifelse(EDUCATION == "Masters", 1, 0),
PhD_IND = ifelse(EDUCATION == "PhD", 1, 0),
Doctor_IND = ifelse(JOB == "Doctor", 1, 0),
Manager_IND = ifelse(JOB == "Manager", 1, 0),
Sport_IND = ifelse(CAR_TYPE_GRP == "Sports Car", 1, 0),
SUV_IND = ifelse(CAR_TYPE_GRP == "z_SUV", 1, 0),
P_TARGET_AMT = exp(6.26917773 -
0.12756159 * MARRIED_IND +
0.18093361 * MALE_IND -
0.11888771 * REVOKED_IND -
0.02637962 * CAR_AGE_FLR -
0.17258351 * CAR_AGE_ONE_IND -
0.09826503 * HOME_VAL_ZERO_IND +
0.02140739 * MVR_PTS_CAP +
0.26788307 * BLUEBOOK_CLOG +
0.15227087 * Masters_IND +
0.32114827 * PhD_IND -
0.39891518 * Doctor_IND -
0.19331633 * Manager_IND +
0.16454011 * Sport_IND +
0.11345302 * SUV_IND),
check_s = predict(glm_fit6$finalModel, test_process3),
diff_s = P_TARGET_AMT - check_s) %>%
select(INDEX, P_TARGET_FLAG, P_TARGET_AMT, check_flag, check_s, diff_f, diff_s)
View(scores)
?predict
scores <- test_process3 %>%
mutate(P_TARGET_FLAG_1 = -2.483003597310 -
0.054573707554 * TIF +
0.156175626835 * PARENT1_IND -
0.625290547649 * MARRIED_IND +
0.613124974465 * COMM_USE_IND +
0.730838376558 * REVOKED_IND -
2.346282191463 * RURAL_IND +
0.523619559214 * INCOME_ZERO_IND +
0.017839396142 * YOJ_CAP +
0.016774384176 * TRAVTIME_CAP +
0.098285854937 * MVR_PTS_CAP -
0.000002665866 * INCOME_CAP -
0.000001017080 * HOME_VAL_CAP -
0.268592168258 * BLUEBOOK_CLOG +
0.728686098030 * KIDSDRIV_IND +
0.420053793383 * CLM_FREQ_IND +
3.386556243405 * AGE_LE +
2.668357569001 * EDUCATION_LE +
2.614630061699 * JOB_LE +
4.717621474153 * CAR_TYPE_LE,
P_TARGET_FLAG = exp(P_TARGET_FLAG_1) / (1 + exp(P_TARGET_FLAG_1)),
check_flag = predict(glm_fit2c$finalModel, test_process3, type = "response"),
diff_f = P_TARGET_FLAG - check_flag) %>%
mutate(Masters_IND = ifelse(EDUCATION == "Masters", 1, 0),
EDUCATIONMasters = ifelse(EDUCATION == "Masters", 1, 0),
PhD_IND = ifelse(EDUCATION == "PhD", 1, 0),
Doctor_IND = ifelse(JOB == "Doctor", 1, 0),
Manager_IND = ifelse(JOB == "Manager", 1, 0),
Sport_IND = ifelse(CAR_TYPE_GRP == "Sports Car", 1, 0),
SUV_IND = ifelse(CAR_TYPE_GRP == "z_SUV", 1, 0),
P_TARGET_AMT = exp(6.26917773 -
0.12756159 * MARRIED_IND +
0.18093361 * MALE_IND -
0.11888771 * REVOKED_IND -
0.02637962 * CAR_AGE_FLR -
0.17258351 * CAR_AGE_ONE_IND -
0.09826503 * HOME_VAL_ZERO_IND +
0.02140739 * MVR_PTS_CAP +
0.26788307 * BLUEBOOK_CLOG +
0.15227087 * Masters_IND +
0.32114827 * PhD_IND -
0.39891518 * Doctor_IND -
0.19331633 * Manager_IND +
0.16454011 * Sport_IND +
0.11345302 * SUV_IND),
check_s = predict(glm_fit6$finalModel, test_process3, type = "response"),
diff_s = P_TARGET_AMT - check_s) %>%
select(INDEX, P_TARGET_FLAG, P_TARGET_AMT, check_flag, check_s, diff_f, diff_s)
lint("kessler_insurance.R")
